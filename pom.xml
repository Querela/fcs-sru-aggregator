<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<prerequisites>
		<maven>3.0.0</maven>
	</prerequisites>

	<groupId>eu.clarin.sru.fcs</groupId>
	<artifactId>aggregator</artifactId>
	<version>2.0.0-beta-40</version>
	<name>FCS Aggregator</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <serviceUser>aggregator</serviceUser>
        <serviceGroup>aggregator</serviceGroup>
	</properties>

	<repositories>
		<repository>
			<id>clarin</id>
			<url>http://catalog.clarin.eu/ds/nexus/content/repositories/Clarin/</url>
		</repository>
		<repository>
			<id>sonatype-nexus-snapshots</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>http://oss.sonatype.org/content/repositories/snapshots</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>io.dropwizard</groupId>
			<artifactId>dropwizard-core</artifactId>
			<version>0.7.1</version>
		</dependency>
		<dependency>
			<groupId>io.dropwizard</groupId>
			<artifactId>dropwizard-assets</artifactId>
			<version>0.7.1</version>
		</dependency>
		<dependency>
			<groupId>io.dropwizard</groupId>
			<artifactId>dropwizard-spdy</artifactId>
			<version>0.7.1</version>
		</dependency>
		<dependency>
			<groupId>io.dropwizard</groupId>
			<artifactId>dropwizard-testing</artifactId>
			<version>0.7.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>eu.clarin.sru</groupId>
			<artifactId>sru-client</artifactId>
			<version>0.9.5</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-codec</groupId>
					<artifactId>commons-codec</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>eu.clarin.weblicht</groupId>
			<artifactId>wlfxb</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency>
			<groupId>eu.clarin.weblicht</groupId>
			<artifactId>connectors</artifactId>
			<version>1.0.6</version>
			<exclusions>
				<exclusion>
					<groupId>com.sun.jersey</groupId>
					<artifactId>jersey-client</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>eu.clarin.weblicht</groupId>
			<artifactId>bindings</artifactId>
			<version>1.0.4</version>
		</dependency>

		<dependency>
		    <groupId>com.optimaize.languagedetector</groupId>
		    <artifactId>language-detector</artifactId>
			<version>0.4</version>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.11-beta2</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>1.18.1</version>
			<type>jar</type>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.3.1</version>
				<executions>
					<execution>
						<id>enforce</id>
						<configuration>
							<rules>
								<DependencyConvergence />
							</rules>
						</configuration>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<createDependencyReducedPom>true</createDependencyReducedPom>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>eu.clarin.sru.fcs.aggregator.app.Aggregator</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.1.2</version>
                <extensions>true</extensions>
                <configuration>
                    <needarch>noarch</needarch>
                    <targetOS>linux</targetOS>
                    <targetVendor>pc</targetVendor>
                    <group>Applications/System</group>
                    <name>${project.artifactId}</name>
                    <release>${buildNumber}</release>
                    <mappings>
                        <mapping>
                            <directory>/usr/share/${project.artifactId}/</directory>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/${project.artifactId}-${project.version}.jar</location>
                                    <destination>${project.artifactId}.jar</destination>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/var/lib/${project.artifactId}/</directory>
                            <filemode>700</filemode>
                            <username>${serviceUser}</username>
                            <groupname>${serviceGroup}</groupname>
                        </mapping>
                        <mapping>
                            <directory>/var/log/${project.artifactId}/</directory>
                            <filemode>700</filemode>
                            <username>${serviceUser}</username>
                            <groupname>${serviceGroup}</groupname>
                        </mapping>
                        <mapping>
                            <directory>/usr/bin</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>src/assembly/bin/service.sh</location>
                                    <destination>${project.artifactId}</destination>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/init.d</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>src/assembly/init-scripts/redhat</location>
                                    <destination>${project.artifactId}</destination>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/default</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <configuration>true</configuration>
                            <filemode>755</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>src/assembly/conf/etc.default</location>
                                    <destination>${project.artifactId}</destination>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/clarind</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <configuration>true</configuration>
                            <filemode>644</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <sources>
                                <source>
                                    <location>src/assembly/conf/${project.artifactId}.yaml</location>
                                    <destination>${project.artifactId}.yaml</destination>
                                </source>
                            </sources>
                        </mapping>
                    </mappings>
                    <preinstallScriptlet>
                        <script>
                            /usr/bin/getent group ${serviceGroup} &gt; /dev/null || /usr/sbin/groupadd ${project.artifactId}
                            /usr/bin/getent passwd ${serviceUser} &gt; /dev/null || /usr/sbin/useradd -r -d /var/lib/${project.artifactId} -m -g ${serviceGroup} ${serviceUser}
                        </script>
                    </preinstallScriptlet>
                    <postinstallScriptlet>
                        <script>
                            chkconfig --add ${project.artifactId};
                            chkconfig ${project.artifactId} on;
                            if [ $1 -eq 0 ]; then
                                /sbin/service ${project.artifactId} start
                            elif [ $1 -ge 1 ]; then
                                /sbin/service ${project.artifactId} restart
                            fi
                        </script>
                    </postinstallScriptlet>
                    <preremoveScriptlet>
                        <script>
                            if [ $1 -eq 0 ] ; then
                            /sbin/service ${project.artifactId} stop;chkconfig --del ${project.artifactId}
                            fi
                        </script>
                    </preremoveScriptlet>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>jdeb</artifactId>
                <groupId>org.vafer</groupId>
                <version>1.3</version>
                    <configuration>
                        <dataSet>
                            <data>
                              <src>${project.build.directory}/${project.artifactId}-${project.version}.jar</src>
                              <type>file</type>
                              <dst>/usr/share/${project.artifactId}/${project.artifactId}.jar</dst>
                            </data>
                            <data>
                                <src>${project.basedir}/src/assembly/bin/service.sh</src>
                              <dst>/usr/bin/${project.artifactId}</dst>
                              <type>file</type>
                              <mapper>
                                    <type>perm</type>
                                    <filemode>755</filemode>
                              </mapper>
                            </data>
                            <data>
                              <src>${project.basedir}/src/assembly/init-scripts/ubuntu</src>
                              <dst>/etc/init.d/${project.artifactId}</dst>
                              <type>file</type>
                              <mapper>
                                    <type>perm</type>
                                    <filemode>755</filemode>
                              </mapper>
                            </data>
                            <data>
                                <src>${project.basedir}/src/assembly/conf/${project.artifactId}.yaml</src>
                              <dst>/etc/clarind/${project.artifactId}.yaml</dst>
                              <type>file</type>
                              <conffile>true</conffile>
                            </data>
                            <data>
                              <src>${project.basedir}/src/assembly/conf/etc.default</src>
                              <dst>/etc/default/${project.artifactId}</dst>
                              <type>file</type>
                              <conffile>true</conffile>
                            </data>
                            <data>
                                <type>template</type>
                                <paths>
                                    <path>var/lib/${project.artifactId}</path>
                                    <path>var/log/${project.artifactId}</path>
                                </paths>
                                <mapper>
                                    <type>perm</type>
                                    <user>${project.artifactId}</user>
                                    <group>${project.artifactId}</group>
                                </mapper>
                            </data>
                        </dataSet>
                    </configuration>
            </plugin>
		</plugins>
	</build>
</project>
